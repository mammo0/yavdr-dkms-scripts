<<<<<<< HEAD
yaVDR - yavdr-dkms-scripts
---------------------------------------

"yet another VDR" (yaVDR) is a Linux distribution focussed on Klaus Schmidingers Video Disk Recorder and based on Ubuntu.

yaVDR tries to let you:

 * Watch and record TV easily and enjoy your media in a smart way: Quickly set up a digital video recorder (PVR) on your HTPC, receive SD and HD channels, manage it simply with a remote control. Furthermore, take advantage of the full blown media center software XBMC to listen to music, watch videos, check the weather.

 * Enjoy High Definition without high CPU load: HDTV normally needs a strong CPU to be displayed flawlessly. If you own a Nvidia ION based nettop or a HTPC with a Nvidia GPU that supports VDPAU, your CPU will remain cool and your energy bill won't hurt you. yaVDR relies on VDPAU which is currently the only simple way to get GPU based HD video decoding on Linux.

 * Start immediately after turning on the HTPC: yaVDR wants to compete with other living room devices as much as possible using upstart to speed up the boot. Besides that, the shutdown method S3 (Suspend to RAM) is enabled by default to bypass cold boot. It is possible to let the system automatically wake up on timers and go to sleep after a configurable timeout.

Links:

Installation: http://www.yavdr.org/installation/
Configuration: http://www.yavdr.org/configuration/
Features: http://www.yavdr.org/features/
Issue tracker: https://bugs.yavdr.com/projects/yavdr/issues/new
Package source: https://github.com/yavdr/yavdr-dkms-scripts
Team members: http://www.yavdr.org/developer-zone/team-members/

=======
This is an experimental build system for media drivers.
All files on this tree are covered by GPLv2, as stated at COPYING file.

Usage:

Just call the build utility:
	$ ./build

Then, install the drivers as root, with:
	# make install

In order to test, unload old drivers with:
	# make rmmod

Then modprobe the driver you want to test. For example, to load driver 'foo':
	# modprobe foo


If you're developing a new driver or patch, it is better to use:
	$ ./build --main-git

Then, install the drivers as root, with:
	# make install

In order to test, unload old drivers with:
	# make rmmod

Then modprobe the driver you want to test. For example:
	# modprobe bttv

In this case, in order to modify something, you should edit the file at
the media/ subdir.

For example, a typical procedure to develop a new patch would be:

	~/media_build $ cd media
	~/media $ gedit drivers/media/video/foo.c
	~/media $ make -C ../v4l
	~/media $ make -C .. rmmod
	~/media $ modprobe foo
	(some procedure to test the "foo" driver)
	~/media $ git diff >/tmp/my_changes.patch
	(email /tmp/my_changes.patch inlined to linux-media@vger.kernel.org)
>>>>>>> 5c6b10e0ae3b82c7c961f2da60a0d36969d81fcd
